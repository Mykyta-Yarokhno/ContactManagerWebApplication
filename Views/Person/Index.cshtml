@model IEnumerable<PersonEntity>
@using System.Globalization;

<h2>Person Data</h2>

<form asp-action="UploadNewCsvFile" method="post" enctype="multipart/form-data">
    <input type="file" name="file" />
    <input type="submit" value="Upload CSV" />
</form>


<table id="personTable" class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Date of Birth</th>
            <th>Married</th>
            <th>Phone</th>
            <th>Salary</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model)
        {
            <tr data-id="@person.Id">
                <td >@person.Name</td>
                <td >@person.DateOfBirth.ToString("yyyy-MM-dd")</td>
                <td >@person.Married</td>
                <td >@person.Phone</td>
                <td >@person.Salary.ToString(CultureInfo.InvariantCulture)</td>
                <td>
                    <button class="deleteBtn btn btn-danger">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#personTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true
            });

            //Inline Editing
            let table = document.getElementById('personTable');

            let editingTd;

            table.onclick = function (event) {

                let target = event.target.closest('.edit-cancel,.edit-ok,td');

                if (!table.contains(target)) return;

                if (target.className == 'edit-cancel') {
                    finishTdEdit(editingTd.elem, false);
                } 
                else if (target.className == 'edit-ok') {
                    let row = $(editingTd.elem.closest('tr'));

                    finishTdEdit(editingTd.elem, true);

                    updatePersonInfo(row);
                } 
                else if (target.nodeName == 'TD') {
                    if (editingTd) 
                        return; 

                    makeTdEditable(target);
                }

            }

            function makeTdEditable(td) {

                if (td.querySelector('button')) {
                    return; 
                }

                editingTd = {
                    elem: td,
                    data: td.innerHTML
                };

                let input = document.createElement('input');
                input.style.width = td.clientWidth + 'px';
                input.style.height = td.clientHeight + 'px';

                input.value = td.innerHTML;
                td.innerHTML = '';
                td.appendChild(input);
                input.focus();

                td.insertAdjacentHTML("beforeEnd",
                    '<div class="edit-controls"><button class="edit-ok">OK</button><button class="edit-cancel">CANCEL</button></div>'
                );
            }

            function finishTdEdit(td, isOk) {
                if (isOk) {
                    td.innerHTML = td.firstChild.value;
                } else {
                    td.innerHTML = editingTd.data;
                }
                editingTd = null;
            }

            function updatePersonInfo(row) {
                var id = row.data('id');
                var person = {
                    Id: id,
                    Name: row.find('td:eq(0)').text(),
                    DateOfBirth: row.find('td:eq(1)').text(),
                    Married: row.find('td:eq(2)').text() === "true",
                    Phone: row.find('td:eq(3)').text(),
                    Salary: row.find('td:eq(4)').text()
                };

                $.ajax({
                    url: '/Person/UpdatePersonInfo',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(person),
                    success: function () {
                        alert('Updated successfully');
                    },
                    error: function (xhr, status, error) {
                        var responseText = xhr.responseText;
                        alert('Update failed: ' + responseText);
                    }
                });
            };

            // Delete record
            $('.deleteBtn').click(function () {
                var row = $(this).closest('tr');
                var id = row.data('id');

                $.ajax({
                    url: '/Person/DeletePersonInfo',
                    type: 'POST',
                    data: { id: id },
                    success: function () {
                        row.remove();
                    }
                });
            });
        });
    </script>
}